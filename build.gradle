plugins {
    id 'application'
    id 'groovy'
    id 'java-library'
    id 'java'
}

gradle.rootProject.ext.antlrVersion='4.9.1'
gradle.rootProject.ext.commonsCliVersion='1.2'
gradle.rootProject.ext.metadataVersion='2.4.1'
gradle.rootProject.ext.groovyVersion='3.0.9'
gradle.rootProject.ext.clueCommonVersion='3.25.3'
gradle.rootProject.ext.log4jVersion='1.2.17'
gradle.rootProject.ext.spockVersion='2.1-M2-groovy-3.0'
gradle.rootProject.ext.asmVersion = '8.0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = 'org.clyze.doop.soot.Main'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.soot-oss:soot:4.2.1"

    api(project(":clue-common")) {
        exclude group: 'com.google.code.gson', module: 'gson'
        exclude group: 'org.apache.ivy', module: 'ivy'
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    api project(":metadata-model")
    implementation "org.ow2.asm:asm-tree:${asmVersion}",    // Java bytecode library
                   "org.ow2.asm:asm-util:${asmVersion}"
    implementation 'org.smali:dexlib2:2.4.0'                // Dexlib2: library for reading/modifying/writing Android dex files
    implementation 'net.dongliu:apk-parser:2.6.10'          // needed for reading binary XML entries from APK inputs
    implementation "org.antlr:antlr4-runtime:${antlrVersion}"
    api project(":native-scanner")
    api "log4j:log4j:${log4jVersion}"            // Logging implementation
    implementation 'org.apache.commons:commons-collections4:4.1'

    testImplementation "org.codehaus.groovy:groovy-all:${groovyVersion}"  // Groovy
    testImplementation "org.spockframework:spock-core:${spockVersion}"
}

//fatJar already exists
task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    from { configurations.compileClasspath.collect { it.directory ? it : zipTree(it) } }
    with jar
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

test {
    useJUnitPlatform()
}

startScripts.dependsOn fatJar
